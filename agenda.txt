================================================================
GENERAL NOTES / KEY FEATURES
================================================================
-Any input that could be aborted by users should instead be kept in a try/except statement
-Need a peaks table
    +https://pandas.pydata.org/docs/reference/api/pandas.plotting.table.html
    +https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.table.html
-Add chromatogram names


================================================================
QUALITY OF LIFE FEATURES
================================================================
-Automatic peak picking based on signal threshold
-Allow deleting/editing picked peaks
-Update peaks by changing values on table
-Still allow manually setting peak bounds

-Help menu
-Settings menu

-Add support for other types of data file (though I would need a sample inspect)


================================================================
UI FEATURES
================================================================
-Add zoom/signal scaling controls
-Label peak retention time and area on figure
-Highlight picked peaks (maybe plot them as separate objects with a fixed color)
-Determined color scheme based on chromatogram order?
-Use icons for buttons (steal them from MestReNova?)


================================================================
ANALYTICAL FEATURES
================================================================
-Reference peak & capacity factor
-Offset time
-Baseline correction

-Read time scale from data file
-Chromatogram addition and subtraction


================================================================
ACTIVE CHROMATOGRAM
================================================================
-Toggle active chromatogram with sidebar (radio box for active & checkbox for hidden)


================================================================
SAVING/LOADING CHROMATOGRAMS
================================================================
-Start back from scratch :')
-Default file names
-Export plot and table to PDF


-Create a standard for saving data (similar to ascii data but with peak data, offset, scale, etc saved as well)
    -There might be a module that easily saves/loads variables
    -In that case, just export the history object and load it back in?


================================================================
SETTINGS
================================================================
-Default time scale
-Data reader behavior
-Chromatogram colors
-Default integration mode
-Error logging
-Store settings in a cfg file



================================================================
KNOWN BUGS
================================================================
When trying to undo importing the first chromatogram:
    Exception in Tkinter callback
    Traceback (most recent call last):
    File "C:\ProgramData\Anaconda3\lib\tkinter\__init__.py", line 1892, in __call__
        return self.func(*args)
    File "C:\Users\epics\Documents\Code\MChroma\MChroma\main.py", line 89, in undo
        self.present().active().plot()
    File "C:\Users\epics\Documents\Code\MChroma\MChroma\main.py", line 61, in active
        return self.chromatograms[self.active_index]
        IndexError: list index out of range
